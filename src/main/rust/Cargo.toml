[package]
name = "ads-mutt-index-format-custom4"
version = "0.1.0"
authors = ["Alan D. Salewski <salewski@att.net>"]

[dependencies.regex]
version = '=1.4.3'
default-features = false
features = [
    # When enabled, this will cause regex to use the standard
    # library. Currently, disabling this feature will always result in a
    # compilation error. It is intended to add alloc-only support to regex in
    # the future.
    'std',

    # Enables all performance related features. This feature is enabled by
    # default and will always cover all features that improve performance,
    # even if more are added in the future.
    'perf'
]

# Strictly speaking, we don't really /need/ lazy_static in this program at
# this time. But once we add '--help' and '--version' command line opts, then
# the pattern established by using the lazy_static! declaration will be the
# general pattern we'll want to use going forward.
#
[dependencies.lazy_static]
version = '=1.4.0'

# The Rust standard library has fine support for Unicode, and in particular
# UTF-8 encoding (so can handle byte sequences of both valid and invalid
# UTF-8, and it also provides support for Unicode "characters"). But the
# higher-level concept of processing grapheme clusters is currently left to
# external crates.
#
# See also:
#     https://github.com/unicode-rs/unicode-segmentation
#     https://unicode-rs.github.io/unicode-segmentation/unicode_segmentation/index.html
#     https://crates.io/crates/unicode-segmentation
#     https://internals.rust-lang.org/t/support-for-grapheme-clusters-in-std/7339/6
#     https://github.com/rust-lang/rust/issues/7043
#
#     https://users.rust-lang.org/t/where-did-str-graphemes-go/7817/3
#     https://doc.rust-lang.org/1.3.0/std/primitive.str.html#method.graphemes
#     https://github.com/rust-lang/rust/commit/8d90d3f36871a00023cc1f313f91e351c287ca15
#
[dependencies.unicode-segmentation]
version = '=1.7.1'
